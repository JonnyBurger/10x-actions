/**
 * @fileoverview Prevent missing React when using JSX
 * @author Glen Mailer
 */
'use strict';
const variable_1 = require("../util/variable");
const pragma_1 = require("../util/pragma");
module.exports = {
    meta: {
        fixable: true,
        docs: {
            description: 'Prevent missing React when using JSX',
            category: 'Possible Errors',
            recommended: true
        },
        schema: []
    },
    create(context) {
        const pragma = pragma_1.getFromContext(context);
        const NOT_DEFINED_MESSAGE = "'{{name}}' must be in scope when using JSX";
        function checkIfReactIsInScope(node) {
            const variables = variable_1.variablesInScope(context);
            if (variable_1.findVariable(variables, pragma)) {
                return;
            }
            const sourceCode = context.getSourceCode();
            context.report({
                node,
                message: NOT_DEFINED_MESSAGE,
                data: {
                    name: pragma
                },
                fix: fixer => {
                    return fixer.insertTextBefore(sourceCode.ast, 'import React from "react";\n');
                }
            });
        }
        return {
            JSXOpeningElement: checkIfReactIsInScope,
            JSXOpeningFragment: checkIfReactIsInScope
        };
    }
};
